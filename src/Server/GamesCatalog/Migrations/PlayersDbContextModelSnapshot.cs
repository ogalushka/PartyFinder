// <auto-generated />
using System;
using GamesCatalog.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamesCatalog.Migrations
{
    [DbContext(typeof(PlayersDbContext))]
    partial class PlayersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamesCatalog.Database.Game", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CoverUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GamesCatalog.Database.Invitations", b =>
                {
                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SenderId", "ReceiverId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PlayerInfo");
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerInfoGame", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlayerInfoId");

                    b.HasIndex("PlayerInfoId");

                    b.ToTable("PlayerInfoGame");
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerTime", b =>
                {
                    b.Property<Guid>("PlayerInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("StartTime")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("EndTime")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("PlayerInfoId", "StartTime", "EndTime");

                    b.ToTable("PlayerTimes");
                });

            modelBuilder.Entity("GamesCatalog.Database.Invitations", b =>
                {
                    b.HasOne("GamesCatalog.Database.PlayerInfo", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamesCatalog.Database.PlayerInfo", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerInfoGame", b =>
                {
                    b.HasOne("GamesCatalog.Database.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesCatalog.Database.PlayerInfo", null)
                        .WithMany()
                        .HasForeignKey("PlayerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerTime", b =>
                {
                    b.HasOne("GamesCatalog.Database.PlayerInfo", "PlayerInfo")
                        .WithMany("Times")
                        .HasForeignKey("PlayerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerInfo");
                });

            modelBuilder.Entity("GamesCatalog.Database.PlayerInfo", b =>
                {
                    b.Navigation("Times");
                });
#pragma warning restore 612, 618
        }
    }
}
